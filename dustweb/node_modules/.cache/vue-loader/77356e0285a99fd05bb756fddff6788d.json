{"remainingRequest":"/Users/ris/Documents/dustweb/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/ris/Documents/dustweb/src/views/Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css","dependencies":[{"path":"/Users/ris/Documents/dustweb/src/views/Login.vue","mtime":1626482500941},{"path":"/Users/ris/Documents/dustweb/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ris/Documents/dustweb/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1624994109000},{"path":"/Users/ris/Documents/dustweb/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ris/Documents/dustweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ris/Documents/dustweb/node_modules/vue-loader-v16/dist/index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmJvZHksIGh0bWwgewogIG1hcmdpbjogMHB4OwogIHBhZGRpbmc6IDBweDsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwMCU7Cn0KCi5vdXRlciB7CiAgaGVpZ2h0OiAxMDAlOwogIHdpZHRoOiAxMDAlOwp9Cgo="},{"version":3,"sources":["/Users/ris/Documents/dustweb/src/views/Login.vue"],"names":[],"mappings":";AAiHA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb","file":"/Users/ris/Documents/dustweb/src/views/Login.vue","sourceRoot":"","sourcesContent":["<template>\n  <el-container class=\"outer\" direction=\"vertical\">\n    <el-row justify=\"center\" align=\"middle\">\n    <el-alert\n        title=\"登陆成功\"\n        type=\"success\"\n        :closable=\"false\"\n        style=\"width: 300px\"\n        show-icon v-if=\"LoginStatus==1\">\n    </el-alert>\n    <el-alert\n        title=\"登陆失败\"\n        type=\"error\"\n        :closable=\"false\"\n        style=\"width: 300px\"\n        show-icon v-if=\"LoginStatus==-1\">\n    </el-alert>\n    </el-row>\n    <br/>\n    <el-row justify=\"center\" align=\"middle\">\n      <el-row justify=\"center\" style=\"width: 300px;background: lightskyblue;border-radius: 20px; box-shadow: 0 2px 4px rgba(0, 0, 0, .12), 0 0 6px rgba(0, 0, 0, .04)\">\n        <el-row justify=\"center\" style=\"height: 300px\" align=\"bottom\">\n          <el-form :model=\"LoginForm\" status-icon :rules=\"rules\" ref=\"LoginForm\" label-width=\"0px\" class=\"LoginForm\">\n            <h1>登陆</h1>\n            <el-form-item prop=\"username\">\n              <el-input type=\"username\" v-model=\"LoginForm.username\" autocomplete=\"on\" placeholder=\"用户名\"></el-input>\n            </el-form-item>\n            <el-form-item  prop=\"password\" >\n              <el-input type=\"password\" v-model=\"LoginForm.password\" autocomplete=\"on\" placeholder=\"密码\"></el-input>\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" round @click=\"submitForm('LoginForm')\">提交</el-button>\n              <el-button round @click=\"resetForm('LoginForm')\">重置</el-button>\n            </el-form-item>\n          </el-form>\n        </el-row>\n      </el-row>\n    </el-row>\n  </el-container>\n</template>\n<script>\nexport default {\n  data() {\n    let validateUsername = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入用户名'));\n      } else {\n        callback();\n      }\n    };\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      LoginForm: {\n        username: \"\",\n        password: \"\",\n      },\n      rules: {\n        username: [\n          {validator: validateUsername, trigger: 'blur'}\n        ],\n        password: [\n          {validator: validatePass, trigger: 'blur'}\n        ],\n      },\n      LoginStatus: 0,\n    };\n  }, methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          //console.log(this.$store.state.URL)\n          const req = {userID: this.LoginForm.username, password: this.LoginForm.password};\n          fetch(this.$store.state.URL + \"/User/Login\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(req),\n          }).then((response) => {\n            let result = response.json();\n            result.then((res => {\n              if (res.status == 1) {\n                this.LoginStatus = 1;\n              } else {\n                this.LoginStatus = -1;\n              }\n              console.log(res.token, this.LoginForm.username, this.LoginForm.password);\n            }))\n          })\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  },\n  mounted() {\n    console.log(this.LoginStatus);\n    this.LoginStatus = 0;\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"password\");\n    localStorage.removeItem(\"token\");\n  }\n}\n</script>\n<style scoped>\nbody, html {\n  margin: 0px;\n  padding: 0px;\n  height: 100%;\n  width: 100%;\n}\n\n.outer {\n  height: 100%;\n  width: 100%;\n}\n\n</style>"]}]}